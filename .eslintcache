[{"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/index.tsx":"1","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/reportWebVitals.ts":"2","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/App.tsx":"3","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/router/AppRouter.tsx":"4","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/router/paths.ts":"5","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/drawing/DrawPage.tsx":"6","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/auth/AuthForm.tsx":"7","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/dashboard/layout/DashboardLayout.tsx":"8","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/dashboard/layout/Navigation.tsx":"9","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/auth/authFormsContainers.tsx":"10","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/auth/RegistrationPage.tsx":"11","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/auth/ResetPasswordPage.tsx":"12"},{"size":529,"mtime":1609885392215,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1609885392217,"results":"15","hashOfConfig":"14"},{"size":421,"mtime":1609885391749,"results":"16","hashOfConfig":"14"},{"size":1702,"mtime":1609885392233,"results":"17","hashOfConfig":"14"},{"size":140,"mtime":1609885392234,"results":"18","hashOfConfig":"14"},{"size":1838,"mtime":1609885392180,"results":"19","hashOfConfig":"14"},{"size":1964,"mtime":1609885391756,"results":"20","hashOfConfig":"14"},{"size":706,"mtime":1609885392161,"results":"21","hashOfConfig":"14"},{"size":1118,"mtime":1609885392179,"results":"22","hashOfConfig":"14"},{"size":349,"mtime":1609885391761,"results":"23","hashOfConfig":"14"},{"size":3328,"mtime":1609885391756,"results":"24","hashOfConfig":"14"},{"size":1099,"mtime":1609885391758,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15u4nyy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/index.tsx",[],["55","56","57","58","59"],"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/reportWebVitals.ts",["60"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/App.tsx",[],"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/router/AppRouter.tsx",[],"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/router/paths.ts",[],"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/drawing/DrawPage.tsx",[],"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/auth/AuthForm.tsx",["61"],"import React, { useState } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport * as paths from '../../router/paths';\nimport { Form, Input, Button, Alert } from 'antd';\nimport map from 'lodash/map';\nimport { ContentWrapper, StyledForm } from './authFormsContainers';\nconst InputPassword = Input.Password;\nconst FormItem = Form.Item;\n\ninterface AuthFormProps extends RouteComponentProps {}\n\nconst AuthForm: React.FunctionComponent<AuthFormProps> = ({ location }) => {\n  const [errors, setErrors] = useState<any[]>([]);\n\n  const [form] = Form.useForm();\n  const { validateFields, getFieldsValue } = form;\n\n  const handleSumbit = (values: any) => {\n    console.log(values);\n  };\n  return (\n    <ContentWrapper>\n      <StyledForm\n        style={{ padding: '20px' }}\n        layout=\"vertical\"\n        form={form}\n        onFinish={handleSumbit}\n        initialValues={{\n          phone: '+7 ',\n        }}\n      >\n        <FormItem\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: 'Email is required',\n            },\n          ]}\n        >\n          <Input size=\"small\" />\n        </FormItem>\n        <FormItem\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Password is required',\n            },\n          ]}\n        >\n          <InputPassword />\n        </FormItem>\n\n        {map(errors, error => (\n          <Alert message={error.message} type=\"error\" />\n        ))}\n\n        <FormItem>\n          <Button htmlType=\"submit\" type=\"primary\">\n            Sign in\n          </Button>\n        </FormItem>\n        <Link to={paths.REGISTER}>Registration</Link>\n        <br />\n        <Link to={paths.RESET_PASSWORD}>Reset password</Link>\n      </StyledForm>\n    </ContentWrapper>\n  );\n};\n\nexport default withRouter(AuthForm);\n","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/dashboard/layout/DashboardLayout.tsx",[],"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/dashboard/layout/Navigation.tsx",[],["62","63","64","65","66"],"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/auth/authFormsContainers.tsx",[],"/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/auth/RegistrationPage.tsx",["67"],"import React, { FC, useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Form, Input, Button, Alert, Checkbox } from 'antd';\nimport { ContentWrapper, StyledForm } from './authFormsContainers';\n\nconst InputPassword = Input.Password;\nconst FormItem = Form.Item;\n\ninterface RegistrationPageProps extends RouteComponentProps {}\n\nconst RegistrationPage: FC<RegistrationPageProps> = () => {\n  const [errors, setErrors] = useState<any[]>([]);\n\n  const [form] = Form.useForm();\n  const { validateFields, getFieldsValue } = form;\n  const handleSubmit = (values: any) => {\n    console.log(values);\n  };\n  return (\n    <ContentWrapper>\n      <StyledForm\n        style={{ padding: '20p' }}\n        layout=\"vertical\"\n        form={form}\n        onFinish={handleSubmit}\n        initialValues={{\n          phone: '+7 ',\n        }}\n      >\n        <FormItem\n          name=\"firstName\"\n          label=\"First name\"\n          rules={[\n            {\n              required: true,\n              message: 'first name is required',\n            },\n          ]}\n        >\n          <Input />\n        </FormItem>\n        <FormItem\n          name=\"lastName\"\n          label=\"Last name\"\n          rules={[\n            {\n              required: true,\n              message: 'last name is required',\n            },\n          ]}\n        >\n          <Input />\n        </FormItem>\n        <FormItem\n          label=\"email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: 'Required',\n            },\n          ]}\n        >\n          <Input />\n        </FormItem>\n        <FormItem\n          label=\"password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Required',\n            },\n          ]}\n        >\n          <InputPassword />\n        </FormItem>\n        <FormItem\n          label=\"Repeat password\"\n          name=\"repeatPassword\"\n          rules={[\n            {\n              required: true,\n              message: 'Required',\n            },\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject('Passwords are not the same');\n              },\n            }),\n          ]}\n        >\n          <InputPassword />\n        </FormItem>\n        <Form.Item\n          name=\"pdAgree\"\n          valuePropName=\"checked\"\n          rules={[\n            {\n              required: true,\n              transform: value => value || undefined,\n              type: 'boolean',\n              message: 'Access to the personal data',\n            },\n          ]}\n        >\n          <Checkbox>\n            Agree to <a href=\"#\">access for personal data</a>\n          </Checkbox>\n        </Form.Item>\n\n        {Array.isArray(errors) && errors.length\n          ? errors.map((error: any, index: number) => (\n              <Alert key={index} message={error.message} type=\"error\" />\n            ))\n          : null}\n\n        <FormItem>\n          <Button htmlType=\"submit\" type=\"primary\">\n            Register\n          </Button>\n        </FormItem>\n      </StyledForm>\n    </ContentWrapper>\n  );\n};\n\nexport default RegistrationPage;\n","/Users/ciemna_noc/Documents/Programming/ujk-drawing/src/components/auth/ResetPasswordPage.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":25,"nodeType":"80","messageId":"81","endLine":3,"endColumn":57},{"ruleId":"82","severity":1,"message":"83","line":7,"column":1,"nodeType":null,"fix":"84"},{"ruleId":"68","replacedBy":"85"},{"ruleId":"70","replacedBy":"86"},{"ruleId":"72","replacedBy":"87"},{"ruleId":"74","replacedBy":"88"},{"ruleId":"76","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":22,"column":28,"nodeType":"92","messageId":"93","endLine":22,"endColumn":33,"fix":"94"},"lines-around-directive",["95"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","import/newline-after-import","Expected 1 empty line after import statement not followed by another import.",{"range":"96","text":"97"},["95"],[],[],[],[],"quotes","Strings must use singlequote.","Literal","wrongQuotes",{"range":"98","text":"99"},"padding-line-between-statements",[339,339],"\n",[703,708],"'20p'"]